{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar emptyLike = require( '@stdlib/array-empty-like' );\nvar normalizeIndex = require( '@stdlib/ndarray-base-normalize-index' );\n\n\n// MAIN //\n\n/**\n* Normalizes a list of indices to the interval `[0,max]`.\n*\n* @param {IntegerArray} indices - indices\n* @param {NonNegativeInteger} max - maximum index\n* @returns {IntegerArray} normalized indices\n*\n* @example\n* var idx = toNormalizedIndices( [ -2, 5 ], 10 );\n* // returns [ 9, 5 ]\n*\n* idx = toNormalizedIndices( [ 15 ], 10 );\n* // returns [ -1 ]\n*/\nfunction toNormalizedIndices( indices, max ) {\n\tvar out;\n\tvar i;\n\n\tout = emptyLike( indices );\n\tfor ( i = 0; i < indices.length; i++ ) {\n\t\tout[ i ] = normalizeIndex( indices[ i ], max );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = toNormalizedIndices;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Normalize a list of indices to the interval `[0,max]`.\n*\n* @module @stdlib/ndarray-base-to-normalized-indices\n*\n* @example\n* var toNormalizedIndices = require( '@stdlib/ndarray-base-to-normalized-indices' );\n*\n* var idx = toNormalizedIndices( [ -2, 5 ], 10 );\n* // returns [ 9, 5 ]\n*\n* idx = toNormalizedIndices( [ 15 ], 10 );\n* // returns [ -1 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAY,QAAS,0BAA2B,EAChDC,EAAiB,QAAS,sCAAuC,EAmBrE,SAASC,EAAqBC,EAASC,EAAM,CAC5C,IAAIC,EACAC,EAGJ,IADAD,EAAML,EAAWG,CAAQ,EACnBG,EAAI,EAAGA,EAAIH,EAAQ,OAAQG,IAChCD,EAAKC,CAAE,EAAIL,EAAgBE,EAASG,CAAE,EAAGF,CAAI,EAE9C,OAAOC,CACR,CAKAN,EAAO,QAAUG,ICnBjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "emptyLike", "normalizeIndex", "toNormalizedIndices", "indices", "max", "out", "i", "main"]
}
